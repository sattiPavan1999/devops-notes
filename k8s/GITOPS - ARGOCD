	GITOPS
⦁	In gitops, all our configurations like (configurations, secrets, services , etc..) are stored in git repository 

⦁	whenever we make any changes in those yaml files, gitops tools like (ARGO CD, FLUX) will detect and apply those changes on k8s cluster 

ARGO CD
⦁	It requires higher cpu and memory so it uses different instances. So cluster command is little bit different.
⦁	It is a GUI approach




    4  curl -Lo kops https://github.com/kubernetes/kops/releases/download/$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '"' -f 4)/kops-linux-amd64
    5  chmod +x kops
    6  sudo mv kops /usr/local/bin/kops
	(install kops)

    7  curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    8  chmod +x kubectl
    9  mv kubectl /usr/local/bin
	(install kubectl)

   10  kubectl version
   11  kops version

   12  aws s3 ls
   13  export KOPS_STATE_STORE=s3://mybucket1.flm
      27   kops create cluster --name mycluster.k8s.local --zones=ap-south-1a,ap-south-1b --master-count=1 --master-size=m7i-flex.large --master-volume-size=30 --node-count=3 --node-size=c7i-flex.large --node-volume-size=30 --image=ami-02d26659fd82cf299
   28   kops update cluster --name mycluster.k8s.local --yes --admin
	(create cluster)

   29  kubectl get nodes



INSTALL ARGO CD

kubectl create namespace argocd
kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
kubectl get all -n argocd



EXPOSE ARGOCD SERVER:

kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}'
yum install jq -y
export ARGOCD_SERVER='kubectl get svc argocd-server -n argocd -o json | jq --raw-output '.status.loadBalancer.ingress[0].hostname''
echo $ARGOCD_SERVER
kubectl get svc argocd-server -n argocd -o json | jq --raw-output .status.loadBalancer.ingress[0].hostname
(The above command will provide load balancer URL to access ARGO CD)


TO GET ARGO CD PASSWORD:

export ARGO_PWD='kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d'
echo $ARGO_PWD
kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
(The above command to provide password to access argo cd)
