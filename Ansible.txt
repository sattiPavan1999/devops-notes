ANSIBLE NOTES/SETUPS/STEPS 

yum install ansible -y 
yum install python-pip -y 
passwd root  

vim /etc/ssh/sshd_config  
(40, 65 lines)

systemctl restart sshd 
(To restart sshd)

vim /etc/ansible/hosts 
(Inventory to save the IPs of slave servers) (only in master or ansible server)  

ssh-keygen 
(To generate a key)

ll .ssh
(To find the generated key)

ssh-copy-id root@private-IP-address-of-a-slave-server  

ansible all -m ping 
(To check all the servers which are connected to master server)


vim playbook.yaml

1.

---
# this is a target
- hosts: all
  connection: ssh

  tasks:
    - name: This is for installing git
      yum: name=git state=present
...

2.

---
# this is a target
- hosts: all
  connection: ssh

  tasks:
    - name: This is for installing git
      yum: name=git state=present

    - name: This is for installing maven
      yum: name=maven state=present
...

3.

---
# this is a target
- hosts: all
  connection: ssh

  vars:
    - a: git
    - b: maven

  tasks:
    - name: This is for installing git
      yum: name={{a}} state=present

    - name: This is for installing maven
      yum: name={{b}} state=present
...

4.

ansible-playbook playbook.yaml --extra-vars "a=git b=maven"

---
# this is a target
- hosts: all
  connection: ssh

  tasks:
    - name: This is for installing git
      yum: name={{a}} state=present

    - name: This is for installing maven
      yum: name={{b}} state=present
...

5.

---
# this is a target
- hosts: all
  connection: ssh

  tasks:
    - name: This is for creating a file
      file: path="/root/file1.txt" state=touch
...


6.

---
# this is a target
- hosts: all
  connection: ssh

  tasks:
    - name: This is for creating a folder
      file: path="/root/folder1" state=directory
...

7.

---
# this is a target
- hosts: all
  connection: ssh

  tasks:
    - name: This is for creating a folder
      copy:
        dest: "/root/file1.txt"
        content: |
         Welcome
         to
         Ansible
         Playbook
...

8.

---
# this is a target
- hosts: all
  connection: ssh

  tasks:
    - name: This is for creating a folder
      copy:
        src: "/root/playbook.yaml"
        dest: "/root/folder1"

...


ansible-playbook playbook.yaml








9.
---
- hosts: dev
  connection: ssh

  tasks:
    -  name: We are installing git
       yum: name=git state=present
       tags: only-git

    -  name: we are installing maven
       yum: name=maven state=present
       tags: only-maven

    - name: we are installing tree
      yum: name=tree state=present
      tags: only-tree
...



ansible-playbook playbook.yaml --skip-tags="only-git"

ansible-playbook playbook.yaml --tags="only-tree”

10.


---
- hosts: all
  connection: ssh

  tasks:
    - name: install web app
      yum: name=httpd state=present

    - name: change to active
      service: name=httpd state=started
...


11.

---
- hosts: all
  connection: ssh

  tasks:
    - name: install web app
      yum: name=httpd state=present
      when: ansible_os_family == "RedHat"

    - name: change to active
      service: name=httpd state=started
      when: ansible_os_family == "RedHat"

    - name: install web app on ubuntu
      apt: name=apache state=present
      when: ansible_os_family == "Ubuntu"

    - name: change to active
      service: name=httpd state=started
      when: ansible_os_family == "Ubuntu"
...



12.

---
- hosts: all
  connection: ssh

  tasks:
    - name: install web app
      yum: name=httpd state=present
      when: ansible_os_family == "RedHat"
      notify: restart app

    - name: install web app on ubuntu
      apt: name=apache state=present
      when: ansible_os_family == "Ubuntu"
      notify: restart ubuntu app

  handlers:
    - name: restart app
      service: name=httpd state=restarted

    - name: restart ubuntu app
      service: name=apache state=restarted

...


13. TASK

---
- hosts: dev
  connection: ssh

  tasks:
    - name: install app
      yum: name=httpd state=present

    - name: start the app
      service: name=httpd state=started

    - name: create a file
      file: path="/var/www/html/index.html" state=touch

    - name: add content
      copy:
        dest: "/var/www/html/index.html"
        content: |
          <h1>This is the task</h1>



...


14.

AD-HOC commands


ansible all -m yum -a "name=git state=present" (To install git in all slaves)

ansible all -a "mkdir newfolder"
(To create a folder in all slaves)

ansible all -a “ls”
(To list the files or folders)  ansible all -a "systemctl status httpd"
(To know the status of the web app status of all the slaves)

15.  ansible vault is used to encrypt the data

ansible-vault encrypt task.yaml

ansible-vault view task.yaml

ansible-vault decrypt task.yaml 
ansible-vault rekey task.yaml (To update the password)

ansible-vault create devops.yaml (encrypt the newly created file)


16.

Different types of installing modules
* Yum
* Command
* Action

---
- hosts: dev
  connection: ssh

  tasks:
    - name: install app
      command: yum install git -y

    - name: install tree
      action: yum name=tree state=present
... 

17.

Create users in the server using loops (if there are multiple users)
Same thing for creating multiple files, folders,…

---
- hosts: dev
  connection: ssh

  tasks:
    - name: create users
      user: name={{item}} state=present
      with_items:
        - jenkins
        - git
        - pavan

... 

18.
To see list of users in slave (users created in slave)

cat /etc/passwd 

19.

If you want to delete the users

---
- hosts: dev
  connection: ssh

  tasks:
    - name: create users
      user: name={{item}} state=absent
      with_items:
        - jenkins
        - git
        - pavan

...

20.

Create groups in the server using loops (if there are multiple groups)

---
- hosts: dev
  connection: ssh

  tasks:
    - name: create users
      group: name={{item}} state=present
      with_items:
        - jenkins
        - git
        - pavan

... 

21.

DEBUG module
Which is used to print any message

---
- hosts: dev
  connection: ssh

  tasks:
    - name: It is a debug module
      debug:
        msg: "Hello World"


...

22.

---
- hosts: dev
  connection: ssh

  tasks:
    - name: It is a debug module
      debug:
        msg: "os is {{ansible_os_family}}"


...

23.

---
- hosts: dev
  connection: ssh

  tasks:
    - name: knoe the git version
      command: git -v
      register: abc

    - name: It is a debug module
      debug:
        msg: "git version is {{abc.stdout}}"


...

24.

---
- hosts: dev
  connection: ssh

  tasks:
    - name: get the code from github
      git:
       repo: "https://github.com/sattiPavan1999/one.git"
       dest: "/root/mycode"
       version: "master"
...


25.

.
├── main.yml
├── pavan
│   └── tasks
│       └── main.yml
└── sai
    ├── main.yml
    └── tasks
        └── main.yml


Ansible ROLES
(Each person has different tasks)


---
- hosts: dev
  connection: ssh

  roles:
    - pavan
    - sai
...


26.


---
- hosts: all
  connection: ssh

  tasks:
    - name: copy the file
      copy:
        src: "/root/new/tomcat.sh"
        dest: "/root"
        mode: 777

    - name: exectute this file
      shell: nohup /root/tomcat.sh

...


27.

Download file from internet

---
- hosts: all
  connection: ssh

  tasks:
    - name: download file
      get_url:
        url: "https://dlcdn.apache.org/ant/RELEASE-NOTES-1.9.16.html"
        dest: "/root"
...



ANSIBLE

For installing Tool 
* yum, commas, action

copy, file, git, get_url, shell, service
user, group
debug



